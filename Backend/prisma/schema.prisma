// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model zone {
  id       Int    @unique @default(autoincrement())
  pincode  String @unique
  district String
  state    String
}

model User {
  id          Int           @unique @default(autoincrement())
  first_name  String?
  last_name   String?
  email       String?
  phoneNumber String        @unique
  userId      appointment[]
}

model appointment {
  id                      Int    @unique @default(autoincrement())
  patient_first_name      String
  patient_last_name       String
  patient_age             String
  gender                  Gender
  referring_doctor        String
  additional_phone_number String

  // status 
  status Status @default(SCHEDULED)

  // user id
  booked_by Int
  userId    User @relation(fields: [booked_by], references: [id])

  // service id 
  service_id Int
  serviceId  services @relation(fields: [service_id], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

}

model services {
  id         Int           @unique @default(autoincrement())
  title      String
  price      String
  banner_url String
  serviceId  appointment[]
}

enum Gender {
  Male
  Female
  Other
}

enum Status {
  SCHEDULED   // The appointment is scheduled but not yet confirmed.
  ACCEPTED   // The appointment has been confirmed.
  IN_PROGRESS // The service is currently being provided.
  COMPLETED   // The appointment is finished.
  CANCELLED   // The appointment was cancelled.
}
